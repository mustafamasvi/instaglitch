{
    "id": "chromakey",
    "name": "Chroma Key",
    "url": "https://www.shadertoy.com/view/XsfGzn",
    "settings": [
      {
        "id": "iTexture2",
        "key": "iTexture2",
        "name": "iTexture2",
        "type": "channel"
      }
    ],
    "fragmentShader": "void main()\n {\n vec2 q = gl_FragCoord.xy / iResolution.xy;\n vec3 bg = texture2D( iTexture2, q ).xyz;\n vec3 fg = texture2D( iTexture, q ).xyz;\n float maxrb = max( fg.r, fg.b );\n float k = clamp( (fg.g-maxrb)*5.0, 0.0, 1.0 );\n float ll = length( fg );\n fg.g = min( fg.g, maxrb*0.8 );\n fg = ll*normalize(fg);\n gl_FragColor = vec4( mix(fg, bg, k), 1.0 );\n }",
    "fragmentShaderBck" : "vec3 rgb2hsv(vec3 rgb)\n {\n float Cmax = max(rgb.r, max(rgb.g, rgb.b));\n float Cmin = min(rgb.r, min(rgb.g, rgb.b));\n float delta = Cmax - Cmin;\n vec3 hsv = vec3(0., 0., Cmax);\n if (Cmax > Cmin)\n {\n hsv.y = delta / Cmax;\n if (rgb.r == Cmax)\n hsv.x = (rgb.g - rgb.b) / delta;\n else\n {\n if (rgb.g == Cmax)\n hsv.x = 2. + (rgb.b - rgb.r) / delta;\n else\n hsv.x = 4. + (rgb.r - rgb.g) / delta;\n }\n hsv.x = fract(hsv.x / 6.);\n }\n return hsv;\n }\n \n float chromaKey(vec3 color)\n {\n vec3 backgroundColor = vec3(0.157, 0.576, 0.129);\n vec3 weights = vec3(4., 1., 2.);\n vec3 hsv = rgb2hsv(color);\n vec3 target = rgb2hsv(backgroundColor);\n float dist = length(weights * (target - hsv));\n return 1. - clamp(3. * dist - 1.5, 0., 1.);\n }\n \n vec3 changeSaturation(vec3 color, float saturation)\n {\n float luma = dot(vec3(0.213, 0.715, 0.072) * color, vec3(1.));\n return mix(vec3(luma), color, saturation);\n }\n \n void main()\n {\n vec2 uv = gl_FragCoord.xy / iResolution.xy;\n vec3 color = texture2D(iTexture, uv).rgb;\n vec3 bg = texture2D(iTexture2, -uv).rgb;\n float incrustation = chromaKey(color);\n color = changeSaturation(color, 0.5);\n color = mix(color, bg, incrustation);\n gl_FragColor = vec4(color, 1.);\n }"
  }
  