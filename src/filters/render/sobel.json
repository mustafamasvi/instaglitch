{
    "id": "Sobel",
    "name": "Sobel",
    "settings": [
        {
          "id": "iStep",
          "defaultValue": 1.0,
          "key": "iStep",
          "name": "Step",
          "type": "float"
        }
      ],
    "fragmentShader": "float intensity(in vec4 color){\n return sqrt((color.x*color.x)+(color.y*color.y)+(color.z*color.z));\n }\n vec3 sobel(float stepx, float stepy, vec2 center){\n float tleft = intensity(texture2D(iTexture,center + vec2(-stepx,stepy)));\n float left = intensity(texture2D(iTexture,center + vec2(-stepx,0)));\n float bleft = intensity(texture2D(iTexture,center + vec2(-stepx,-stepy)));\n float top = intensity(texture2D(iTexture,center + vec2(0,stepy)));\n float bottom = intensity(texture2D(iTexture,center + vec2(0,-stepy)));\n float tright = intensity(texture2D(iTexture,center + vec2(stepx,stepy)));\n float right = intensity(texture2D(iTexture,center + vec2(stepx,0)));\n float bright = intensity(texture2D(iTexture,center + vec2(stepx,-stepy)));\n float x = tleft + 2.0*left + bleft - tright - 2.0*right - bright;\n float y = -tleft - 2.0*top - tright + bleft + 2.0 * bottom + bright;\n float color = sqrt((x*x) + (y*y));\n return vec3(color,color,color);\n }\n void main(){\n vec2 uv = gl_FragCoord.xy / iResolution.xy;\n gl_FragColor.xyz = sobel(iStep/iResolution.x, iStep/iResolution.y, uv);\n gl_FragColor.a = 1.0;\n }"
  }
  